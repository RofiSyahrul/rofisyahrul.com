---
import NavHeader from '@/shared/components/header/nav-header.astro';
import type { PortfolioDetail } from '@/shared/lib/portfolio/types';

import Avatar from './components/avatar.astro';
import Carousel from './components/carousel/carousel.svelte';
import InitialDate from './components/initial-date.astro';
import Links from './components/links.astro';
import RichText from './components/rich-text.astro';
import TechStacks from './components/tech-stacks.astro';

type Props = PortfolioDetail;

const {
  description,
  icon,
  initialDate,
  mediaList,
  repository,
  techStacks,
  title,
  url,
} = Astro.props;
---

<NavHeader isFitHeight {title} />

<main>
  <Carousel {mediaList} client:load />

  <div class='initial-date'>
    <InitialDate {initialDate} />
  </div>

  <article>
    {icon.url && <Avatar class='avatar' {icon} />}
    <RichText class='description' content={description} />
  </article>

  {
    techStacks.length > 0 && (
      <section class='tech-stacks'>
        <TechStacks {techStacks} />
      </section>
    )
  }
</main>

<Links
  class='external-links shadow-inner'
  component='footer'
  demoURL={url}
  repositoryURL={repository}
  withText
/>

<style>
  main {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 12px;
    width: 100%;
    max-width: 1024px;
    padding: 4px 0 56px;
    margin: 0 auto;
  }

  .initial-date {
    display: flex;
    padding: 0 8px;
  }

  article {
    padding: 0 8px;
  }

  .avatar {
    height: 64px;
    margin-right: 8px;
    float: left;
  }

  .description {
    margin-top: -8px;
  }

  .tech-stacks {
    display: flex;
    flex-direction: column;
    gap: 8px;
    width: 100%;
    padding: 0 8px 12px 8px;
  }

  .external-links {
    position: fixed;
    bottom: 0;
    width: 100%;
    padding: 12px 8px;
    background-color: var(--color-neutral-bright);
    --tw-shadow-color: var(--color-neutral-bright1);
    --tw-shadow: var(--tw-shadow-colored);
  }

  :global(.dark) .external-links {
    --tw-shadow-color: var(--color-neutral-dim2);
    background-color: var(--color-neutral-dim);
  }
</style>
