---
import Footer from '@/shared/components/footer.astro';
import BaseHeader from '@/shared/components/header/base-header.astro';
import Spotify from '@/shared/icons/spotify.svelte';

import Bio from './components/bio.astro';
import Counts from './components/counts.astro';
import Highlights from './components/highlights/highlights.astro';
import NowPlaying from './components/now-playing/now-playing.svelte';
import PortfolioGrid from './components/portfolio/portfolio-grid.astro';
import {
  portfolioGridID,
  portfolioListID,
} from './components/tab-list/config';
import TabList from './components/tab-list/tab-list.svelte';
import TopFold from './components/top-fold/top-fold.astro';
import type { HomeData } from './types';

type Props = HomeData;

const {
  portfolio,
  hasRecentlyPlayedTracks,
  hasTopTracks,
  spotifyNowPlaying,
} = Astro.props;

const { isMobile } = Astro.locals.userAgent;

const { feeds } = portfolio;
const hasStories =
  hasRecentlyPlayedTracks || !!spotifyNowPlaying?.previewURL;
---

<BaseHeader transitionPersist='home-header' />

<main transition:persist>
  <TopFold {hasStories} />

  <Bio section='main' />

  {hasTopTracks && <Highlights />}

  <section class='sm:hidden'>
    <Counts />
  </section>

  {
    isMobile && (
      <TabList
        scrollerSelector='section.feeds-scroller'
        client:load
        transition:persist
      />
    )
  }

  <section class='feeds-scroller scrollbar-none'>
    <div class='feeds'>
      <div
        aria-labelledby={'tab-' + portfolioGridID}
        id={portfolioGridID}
        role='tabpanel'
      >
        <PortfolioGrid {feeds} />
      </div>

      {
        isMobile && (
          <div
            aria-labelledby={'tab-' + portfolioListID}
            id={portfolioListID}
            role='tabpanel'
          >
            <div style='width: 100%; height: 100vh;'>
              Portfolio List
            </div>
          </div>
        )
      }
    </div>
  </section>

  <section class='now-playing'>
    <NowPlaying data={spotifyNowPlaying} client:visible>
      <Fragment slot='title'>
        <Spotify class='text-secondary-bright' />
        <h3>Now Playing</h3>
      </Fragment>
    </NowPlaying>
  </section>
</main>

<Footer transitionPersist='home-footer' />

<style>
  main {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 12px;
    width: 100%;
    max-width: 1024px;
    padding: 12px 0;
    margin: 0 auto;
  }

  .feeds-scroller {
    position: relative;
    width: 100%;
    overflow: hidden;
  }

  .feeds {
    display: flex;
  }

  .feeds div[role='tabpanel'] {
    flex: 1 0 100%;
    padding-bottom: 8px;
    border-bottom: 1px solid var(--color-neutral-bright1);
    transition: height 250ms ease-in-out;
  }

  .feeds div[role='tabpanel'][aria-hidden='true'] {
    height: 0;
  }

  :global(.dark) .feeds div[role='tabpanel'] {
    border-bottom-color: var(--color-neutral-dim1);
  }

  .now-playing {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 8px;
    max-width: calc(100% - 32px);
    min-width: 250px;
    padding: 8px;
    margin: 0 auto;
    background-color: var(--color-neutral-bright0);
    border-radius: 8px;
  }

  :global(.dark) .now-playing {
    background-color: var(--color-neutral-dim0);
  }

  .now-playing h3 {
    flex: 1;
    font-weight: 700;
  }

  @media (min-width: 1024px) {
    .feeds div[role='tabpanel'] {
      border: none;
      padding: 0;
    }

    .now-playing {
      position: fixed;
      bottom: 8px;
      right: 8px;
      padding: 12px;
      max-width: 320px;
    }
  }
</style>
